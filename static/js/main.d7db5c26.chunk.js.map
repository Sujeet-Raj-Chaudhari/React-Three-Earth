{"version":3,"sources":["assets/8k_earth_daymap.jpg","assets/8k_earth_normal_map.jpg","assets/8k_earth_specular_map.jpg","assets/8k_earth_clouds.jpg","Components/Earth.jsx","Components/HeaderSection.jsx","App.js","reportWebVitals.js","index.js"],"names":["Earth","props","useLoader","TextureLoader","EarthDayMap","EarthNormalMap","EarthSpecularMap","EarthCloudsMap","colorMap","normalMap","specularMap","cloudsMap","earthRef","useRef","cloudRef","useFrame","elapsedTime","clock","getElapsedTime","current","rotation","y","color","position","intensity","Stars","radius","depth","count","factor","saturation","faded","ref","args","map","opacity","depthWrite","transparent","side","THREE","metalness","roughness","HeaderSectionContainer","styled","div","Logo","h4","Slogan","Paragraph","p","DonateButton","button","HeaderSection","CanvasContainer","App","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAAe,MAA0B,4CCA1B,MAA0B,gDCA1B,MAA0B,kDCA1B,MAA0B,4C,OCYlC,SAASA,EAAMC,GAAQ,IAAD,EAE2BC,YAAUC,gBAAe,CAACC,EAAaC,EAAgBC,EAAkBC,IAFpG,mBAEpBC,EAFoB,KAEVC,EAFU,KAECC,EAFD,KAEcC,EAFd,KAIrBC,EAAWC,mBACXC,EAAWD,mBASjB,OAPAE,aAAS,YAAc,IACfC,EADc,EAAXC,MACiBC,iBAC1BN,EAASO,QAAQC,SAASC,EAAIL,EAAY,EAC1CF,EAASK,QAAQC,SAASC,EAAIL,EAAY,KAK1C,qCAEE,4BAAYM,MAAM,UAClBC,SAAU,CAAC,EAAG,EAAI,GAClBC,UAAW,MAGX,cAACC,EAAA,EAAD,CAAOC,OAAQ,IACfC,MAAO,GACPC,MAAO,IACPC,OAAQ,EACRC,WAAY,EACZC,OAAO,IAEP,uBAAMC,IAAKlB,EAAUS,SAAU,CAAC,EAAG,EAAG,KAAtC,UACE,gCAAgBU,KAAM,CAAC,MAAO,GAAI,MAClC,mCAAmBC,IAAKvB,EACxBwB,QAAS,GACTC,YAAY,EACZC,aAAa,EACbC,KAAMC,kBAER,uBAAMP,IAAKpB,EAAUW,SAAU,CAAC,EAAG,EAAG,KAAtC,UACI,gCAAgBU,KAAM,CAAC,EAAG,GAAI,MAC9B,mCAAmBvB,YAAcA,IACjC,sCAAsBwB,IAAO1B,EAAUC,UAAaA,EAAW+B,UAAW,GAAKC,UAAW,WChDpG,I,EAAMC,EAAyBC,IAAOC,IAAV,8NActBC,EAAOF,IAAOG,GAAV,+GAQJC,EAASJ,IAAOG,GAAV,8GAQNE,EAAWL,IAAOM,EAAT,sKAYTC,EAAeP,IAAOQ,OAAV,wYAmBX,SAASC,IACZ,OACI,eAACV,EAAD,WACI,cAACG,EAAD,6BACA,cAACE,EAAD,2CACA,cAACC,EAAD,wJAGA,cAACE,EAAD,0BClEZ,IAAMG,EAAkBV,IAAOC,IAAV,6DAkBNU,MAbf,WACE,OACE,eAACD,EAAD,WACE,cAACD,EAAD,IACA,cAAC,IAAD,UACE,cAAC,WAAD,CAAUG,SAAU,KAApB,SACE,cAACvD,EAAD,YCNKwD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d7db5c26.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/8k_earth_daymap.54672c1f.jpg\";","export default __webpack_public_path__ + \"static/media/8k_earth_normal_map.930cf2e9.jpg\";","export default __webpack_public_path__ + \"static/media/8k_earth_specular_map.7b4efa59.jpg\";","export default __webpack_public_path__ + \"static/media/8k_earth_clouds.08fcd800.jpg\";","import React, {useRef} from \"react\";\r\nimport { useFrame, useLoader } from \"@react-three/fiber\";\r\nimport { Stars, pointLight} from \"@react-three/drei\";\r\nimport * as THREE from \"three\";\r\n\r\nimport EarthDayMap from \"../assets/8k_earth_daymap.jpg\";\r\nimport EarthNormalMap from \"../assets/8k_earth_normal_map.jpg\";\r\nimport EarthSpecularMap from \"../assets/8k_earth_specular_map.jpg\";\r\nimport EarthCloudsMap from \"../assets/8k_earth_clouds.jpg\";\r\nimport { TextureLoader } from \"three\";\r\n\r\n\r\nexport function Earth(props) {\r\n\r\n  const [colorMap, normalMap, specularMap, cloudsMap] = useLoader(TextureLoader, [EarthDayMap, EarthNormalMap, EarthSpecularMap, EarthCloudsMap]);\r\n  \r\n  const earthRef = useRef();\r\n  const cloudRef = useRef();\r\n\r\n  useFrame(({clock}) => {\r\n    const elapsedTime = clock.getElapsedTime();\r\n    earthRef.current.rotation.y = elapsedTime/6;\r\n    cloudRef.current.rotation.y = elapsedTime/6;\r\n  });\r\n  \r\n\r\n  return (\r\n    <>\r\n      {/* <ambientLight intensity={1} /> */}\r\n      <pointLight color=\"#f6f3ea\"\r\n      position={[1, 0 , 5]}\r\n      intensity={1.2}\r\n      />\r\n\r\n      <Stars radius={300} \r\n      depth={60}\r\n      count={20000} \r\n      factor={7} \r\n      saturation={0}\r\n      faded={true}\r\n      />\r\n      <mesh ref={cloudRef} position={[0, 0, 2.5]}>\r\n        <sphereGeometry args={[1.005, 32, 32]}/>\r\n        <meshPhongMaterial map={cloudsMap} \r\n        opacity={0.4} \r\n        depthWrite={true} \r\n        transparent={true} \r\n        side={THREE.DoubleSide}/>\r\n      </mesh>\r\n      <mesh ref={earthRef} position={[0, 0, 2.5]}>\r\n          <sphereGeometry args={[1, 32, 32]} />\r\n          <meshPhongMaterial specularMap ={specularMap}/>\r\n          <meshStandardMaterial map = {colorMap} normalMap = {normalMap} metalness={0.4} roughness={0.7}/>\r\n          {/* <OrbitControls enableZoom={true} \r\n            enablePan={true} \r\n            enableRotate={true} \r\n            zoomSpeed={0.6} \r\n            panSpeed={0.5} \r\n            rotateSpeed={0.4}\r\n            /> */}\r\n      </mesh>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst HeaderSectionContainer = styled.div`\r\nposition: absolute;\r\nwidth:100%;\r\nheight: 100%;\r\ntop: 0;\r\nleft: 0;\r\nbackground-color: #1756dd32;\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\npadding-top: 13%;\r\nz-index: 99;\r\n`;\r\n\r\nconst Logo = styled.h4 `\r\nmargin: 0;\r\ncolor: #fff;\r\nfont-weight: 800;\r\nfont-size: 80px;\r\ntext-align:center;\r\n`;\r\n\r\nconst Slogan = styled.h4 `\r\nmargin: 0;\r\ncolor: #fff;\r\nfont-weight: 700;\r\nfont-size: 30px;\r\nmargin-top: 10px;\r\n`;\r\n\r\nconst Paragraph= styled.p `\r\nmargin:0;\r\nmargin:top: 3rem;\r\ncolor: #fff;\r\nfont-size: 14px;\r\nline-height: 1.5;\r\nfont-weight: 500;\r\nmax-width: 30%;\r\ntext-align: center;\r\n`\r\n\r\n\r\nconst DonateButton = styled.button`\r\n  outline: none;\r\n  border: none;\r\n  background-color: #27b927;\r\n  color: #fff;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  border-radius: 8px;\r\n  padding: 8px 2em;\r\n  margin-top: 3em;\r\n  cursor: pointer;\r\n  border: 2px solid transparent;\r\n  transition: all 350ms ease-in-out;\r\n  &:hover {\r\n    background-color: transparent;\r\n    border: 2px solid #27b927;\r\n  }\r\n`;\r\n\r\nexport function HeaderSection(){\r\n    return(\r\n        <HeaderSectionContainer>\r\n            <Logo>Global Warming</Logo>\r\n            <Slogan>Keep it cool for safe living</Slogan>\r\n            <Paragraph> You can help us cool off th world and have it go back to it's best state ever\r\n                by donating to help fix our only World and beloved EARTH!!\r\n            </Paragraph>\r\n            <DonateButton>Donate!!</DonateButton>\r\n        </HeaderSectionContainer>\r\n    );\r\n}","import \"./App.css\";\nimport styled from \"styled-components\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { Earth } from \"./Components/Earth\";\nimport { Suspense } from \"react\";\nimport { HeaderSection } from \"./Components/HeaderSection\";\n\nconst CanvasContainer = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nfunction App() {\n  return (\n    <CanvasContainer>\n      <HeaderSection/>\n      <Canvas>\n        <Suspense fallback={null}>\n          <Earth />\n        </Suspense>\n      </Canvas>\n    </CanvasContainer>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}